@using Microsoft.AspNetCore.Identity
@using flights.Areas.Identity.Data

@inject SignInManager<flightsUser> SignInManager
@inject UserManager<flightsUser> UserManager

<ul style="margin:0px;" class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
         <li class="nav-item"><a href="~/Flights/flight/Info/?UserID=@UserManager.GetUserId(User)">Tickets</a></li>

    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("show", "flight", new { area = "Flights" })">
            <button style="padding:0px;" id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
